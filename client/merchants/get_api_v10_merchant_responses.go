// Code generated by go-swagger; DO NOT EDIT.

package merchants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/v2/models"
)

// GetAPIV10MerchantReader is a Reader for the GetAPIV10Merchant structure.
type GetAPIV10MerchantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV10MerchantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV10MerchantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAPIV10MerchantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV10MerchantInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1.0/merchant] GetAPIV10Merchant", response, response.Code())
	}
}

// NewGetAPIV10MerchantOK creates a GetAPIV10MerchantOK with default headers values
func NewGetAPIV10MerchantOK() *GetAPIV10MerchantOK {
	return &GetAPIV10MerchantOK{}
}

/*
GetAPIV10MerchantOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV10MerchantOK struct {
	Payload *models.PaginatedMerchantResponse
}

// IsSuccess returns true when this get Api v10 merchant o k response has a 2xx status code
func (o *GetAPIV10MerchantOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v10 merchant o k response has a 3xx status code
func (o *GetAPIV10MerchantOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant o k response has a 4xx status code
func (o *GetAPIV10MerchantOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v10 merchant o k response has a 5xx status code
func (o *GetAPIV10MerchantOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant o k response a status code equal to that given
func (o *GetAPIV10MerchantOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v10 merchant o k response
func (o *GetAPIV10MerchantOK) Code() int {
	return 200
}

func (o *GetAPIV10MerchantOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantOK %s", 200, payload)
}

func (o *GetAPIV10MerchantOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantOK %s", 200, payload)
}

func (o *GetAPIV10MerchantOK) GetPayload() *models.PaginatedMerchantResponse {
	return o.Payload
}

func (o *GetAPIV10MerchantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedMerchantResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantUnauthorized creates a GetAPIV10MerchantUnauthorized with default headers values
func NewGetAPIV10MerchantUnauthorized() *GetAPIV10MerchantUnauthorized {
	return &GetAPIV10MerchantUnauthorized{}
}

/*
GetAPIV10MerchantUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAPIV10MerchantUnauthorized struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant unauthorized response has a 2xx status code
func (o *GetAPIV10MerchantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant unauthorized response has a 3xx status code
func (o *GetAPIV10MerchantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant unauthorized response has a 4xx status code
func (o *GetAPIV10MerchantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v10 merchant unauthorized response has a 5xx status code
func (o *GetAPIV10MerchantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant unauthorized response a status code equal to that given
func (o *GetAPIV10MerchantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v10 merchant unauthorized response
func (o *GetAPIV10MerchantUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV10MerchantUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantUnauthorized %s", 401, payload)
}

func (o *GetAPIV10MerchantUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantUnauthorized %s", 401, payload)
}

func (o *GetAPIV10MerchantUnauthorized) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantInternalServerError creates a GetAPIV10MerchantInternalServerError with default headers values
func NewGetAPIV10MerchantInternalServerError() *GetAPIV10MerchantInternalServerError {
	return &GetAPIV10MerchantInternalServerError{}
}

/*
GetAPIV10MerchantInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAPIV10MerchantInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant internal server error response has a 2xx status code
func (o *GetAPIV10MerchantInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant internal server error response has a 3xx status code
func (o *GetAPIV10MerchantInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant internal server error response has a 4xx status code
func (o *GetAPIV10MerchantInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v10 merchant internal server error response has a 5xx status code
func (o *GetAPIV10MerchantInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v10 merchant internal server error response a status code equal to that given
func (o *GetAPIV10MerchantInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v10 merchant internal server error response
func (o *GetAPIV10MerchantInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV10MerchantInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantInternalServerError %s", 500, payload)
}

func (o *GetAPIV10MerchantInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant][%d] getApiV10MerchantInternalServerError %s", 500, payload)
}

func (o *GetAPIV10MerchantInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
