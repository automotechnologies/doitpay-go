// Code generated by go-swagger; DO NOT EDIT.

package merchants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/v2/models"
)

// GetAPIV10MerchantMerchantRefReader is a Reader for the GetAPIV10MerchantMerchantRef structure.
type GetAPIV10MerchantMerchantRefReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV10MerchantMerchantRefReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV10MerchantMerchantRefOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV10MerchantMerchantRefBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAPIV10MerchantMerchantRefUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV10MerchantMerchantRefNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV10MerchantMerchantRefInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1.0/merchant/{merchant_ref}] GetAPIV10MerchantMerchantRef", response, response.Code())
	}
}

// NewGetAPIV10MerchantMerchantRefOK creates a GetAPIV10MerchantMerchantRefOK with default headers values
func NewGetAPIV10MerchantMerchantRefOK() *GetAPIV10MerchantMerchantRefOK {
	return &GetAPIV10MerchantMerchantRefOK{}
}

/*
GetAPIV10MerchantMerchantRefOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV10MerchantMerchantRefOK struct {
	Payload *models.MerchantResponse
}

// IsSuccess returns true when this get Api v10 merchant merchant ref o k response has a 2xx status code
func (o *GetAPIV10MerchantMerchantRefOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v10 merchant merchant ref o k response has a 3xx status code
func (o *GetAPIV10MerchantMerchantRefOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant merchant ref o k response has a 4xx status code
func (o *GetAPIV10MerchantMerchantRefOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v10 merchant merchant ref o k response has a 5xx status code
func (o *GetAPIV10MerchantMerchantRefOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant merchant ref o k response a status code equal to that given
func (o *GetAPIV10MerchantMerchantRefOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v10 merchant merchant ref o k response
func (o *GetAPIV10MerchantMerchantRefOK) Code() int {
	return 200
}

func (o *GetAPIV10MerchantMerchantRefOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefOK %s", 200, payload)
}

func (o *GetAPIV10MerchantMerchantRefOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefOK %s", 200, payload)
}

func (o *GetAPIV10MerchantMerchantRefOK) GetPayload() *models.MerchantResponse {
	return o.Payload
}

func (o *GetAPIV10MerchantMerchantRefOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MerchantResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantMerchantRefBadRequest creates a GetAPIV10MerchantMerchantRefBadRequest with default headers values
func NewGetAPIV10MerchantMerchantRefBadRequest() *GetAPIV10MerchantMerchantRefBadRequest {
	return &GetAPIV10MerchantMerchantRefBadRequest{}
}

/*
GetAPIV10MerchantMerchantRefBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type GetAPIV10MerchantMerchantRefBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant merchant ref bad request response has a 2xx status code
func (o *GetAPIV10MerchantMerchantRefBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant merchant ref bad request response has a 3xx status code
func (o *GetAPIV10MerchantMerchantRefBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant merchant ref bad request response has a 4xx status code
func (o *GetAPIV10MerchantMerchantRefBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v10 merchant merchant ref bad request response has a 5xx status code
func (o *GetAPIV10MerchantMerchantRefBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant merchant ref bad request response a status code equal to that given
func (o *GetAPIV10MerchantMerchantRefBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v10 merchant merchant ref bad request response
func (o *GetAPIV10MerchantMerchantRefBadRequest) Code() int {
	return 400
}

func (o *GetAPIV10MerchantMerchantRefBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefBadRequest %s", 400, payload)
}

func (o *GetAPIV10MerchantMerchantRefBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefBadRequest %s", 400, payload)
}

func (o *GetAPIV10MerchantMerchantRefBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantMerchantRefBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantMerchantRefUnauthorized creates a GetAPIV10MerchantMerchantRefUnauthorized with default headers values
func NewGetAPIV10MerchantMerchantRefUnauthorized() *GetAPIV10MerchantMerchantRefUnauthorized {
	return &GetAPIV10MerchantMerchantRefUnauthorized{}
}

/*
GetAPIV10MerchantMerchantRefUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAPIV10MerchantMerchantRefUnauthorized struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant merchant ref unauthorized response has a 2xx status code
func (o *GetAPIV10MerchantMerchantRefUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant merchant ref unauthorized response has a 3xx status code
func (o *GetAPIV10MerchantMerchantRefUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant merchant ref unauthorized response has a 4xx status code
func (o *GetAPIV10MerchantMerchantRefUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v10 merchant merchant ref unauthorized response has a 5xx status code
func (o *GetAPIV10MerchantMerchantRefUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant merchant ref unauthorized response a status code equal to that given
func (o *GetAPIV10MerchantMerchantRefUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api v10 merchant merchant ref unauthorized response
func (o *GetAPIV10MerchantMerchantRefUnauthorized) Code() int {
	return 401
}

func (o *GetAPIV10MerchantMerchantRefUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefUnauthorized %s", 401, payload)
}

func (o *GetAPIV10MerchantMerchantRefUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefUnauthorized %s", 401, payload)
}

func (o *GetAPIV10MerchantMerchantRefUnauthorized) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantMerchantRefUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantMerchantRefNotFound creates a GetAPIV10MerchantMerchantRefNotFound with default headers values
func NewGetAPIV10MerchantMerchantRefNotFound() *GetAPIV10MerchantMerchantRefNotFound {
	return &GetAPIV10MerchantMerchantRefNotFound{}
}

/*
GetAPIV10MerchantMerchantRefNotFound describes a response with status code 404, with default header values.

Merchant not found
*/
type GetAPIV10MerchantMerchantRefNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant merchant ref not found response has a 2xx status code
func (o *GetAPIV10MerchantMerchantRefNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant merchant ref not found response has a 3xx status code
func (o *GetAPIV10MerchantMerchantRefNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant merchant ref not found response has a 4xx status code
func (o *GetAPIV10MerchantMerchantRefNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v10 merchant merchant ref not found response has a 5xx status code
func (o *GetAPIV10MerchantMerchantRefNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v10 merchant merchant ref not found response a status code equal to that given
func (o *GetAPIV10MerchantMerchantRefNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get Api v10 merchant merchant ref not found response
func (o *GetAPIV10MerchantMerchantRefNotFound) Code() int {
	return 404
}

func (o *GetAPIV10MerchantMerchantRefNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefNotFound %s", 404, payload)
}

func (o *GetAPIV10MerchantMerchantRefNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefNotFound %s", 404, payload)
}

func (o *GetAPIV10MerchantMerchantRefNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantMerchantRefNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV10MerchantMerchantRefInternalServerError creates a GetAPIV10MerchantMerchantRefInternalServerError with default headers values
func NewGetAPIV10MerchantMerchantRefInternalServerError() *GetAPIV10MerchantMerchantRefInternalServerError {
	return &GetAPIV10MerchantMerchantRefInternalServerError{}
}

/*
GetAPIV10MerchantMerchantRefInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAPIV10MerchantMerchantRefInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get Api v10 merchant merchant ref internal server error response has a 2xx status code
func (o *GetAPIV10MerchantMerchantRefInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v10 merchant merchant ref internal server error response has a 3xx status code
func (o *GetAPIV10MerchantMerchantRefInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v10 merchant merchant ref internal server error response has a 4xx status code
func (o *GetAPIV10MerchantMerchantRefInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v10 merchant merchant ref internal server error response has a 5xx status code
func (o *GetAPIV10MerchantMerchantRefInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v10 merchant merchant ref internal server error response a status code equal to that given
func (o *GetAPIV10MerchantMerchantRefInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v10 merchant merchant ref internal server error response
func (o *GetAPIV10MerchantMerchantRefInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV10MerchantMerchantRefInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefInternalServerError %s", 500, payload)
}

func (o *GetAPIV10MerchantMerchantRefInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1.0/merchant/{merchant_ref}][%d] getApiV10MerchantMerchantRefInternalServerError %s", 500, payload)
}

func (o *GetAPIV10MerchantMerchantRefInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetAPIV10MerchantMerchantRefInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
