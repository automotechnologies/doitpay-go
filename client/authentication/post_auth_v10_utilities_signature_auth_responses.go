// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostAuthV10UtilitiesSignatureAuthReader is a Reader for the PostAuthV10UtilitiesSignatureAuth structure.
type PostAuthV10UtilitiesSignatureAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthV10UtilitiesSignatureAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthV10UtilitiesSignatureAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthV10UtilitiesSignatureAuthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthV10UtilitiesSignatureAuthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthV10UtilitiesSignatureAuthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /auth/v1.0/utilities/signature-auth] PostAuthV10UtilitiesSignatureAuth", response, response.Code())
	}
}

// NewPostAuthV10UtilitiesSignatureAuthOK creates a PostAuthV10UtilitiesSignatureAuthOK with default headers values
func NewPostAuthV10UtilitiesSignatureAuthOK() *PostAuthV10UtilitiesSignatureAuthOK {
	return &PostAuthV10UtilitiesSignatureAuthOK{}
}

/*
PostAuthV10UtilitiesSignatureAuthOK describes a response with status code 200, with default header values.

OK
*/
type PostAuthV10UtilitiesSignatureAuthOK struct {
	Payload string
}

// IsSuccess returns true when this post auth v10 utilities signature auth o k response has a 2xx status code
func (o *PostAuthV10UtilitiesSignatureAuthOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post auth v10 utilities signature auth o k response has a 3xx status code
func (o *PostAuthV10UtilitiesSignatureAuthOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth v10 utilities signature auth o k response has a 4xx status code
func (o *PostAuthV10UtilitiesSignatureAuthOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post auth v10 utilities signature auth o k response has a 5xx status code
func (o *PostAuthV10UtilitiesSignatureAuthOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth v10 utilities signature auth o k response a status code equal to that given
func (o *PostAuthV10UtilitiesSignatureAuthOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post auth v10 utilities signature auth o k response
func (o *PostAuthV10UtilitiesSignatureAuthOK) Code() int {
	return 200
}

func (o *PostAuthV10UtilitiesSignatureAuthOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthOK %s", 200, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthOK %s", 200, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthOK) GetPayload() string {
	return o.Payload
}

func (o *PostAuthV10UtilitiesSignatureAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthV10UtilitiesSignatureAuthBadRequest creates a PostAuthV10UtilitiesSignatureAuthBadRequest with default headers values
func NewPostAuthV10UtilitiesSignatureAuthBadRequest() *PostAuthV10UtilitiesSignatureAuthBadRequest {
	return &PostAuthV10UtilitiesSignatureAuthBadRequest{}
}

/*
PostAuthV10UtilitiesSignatureAuthBadRequest describes a response with status code 400, with default header values.

Invalid request parameters
*/
type PostAuthV10UtilitiesSignatureAuthBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this post auth v10 utilities signature auth bad request response has a 2xx status code
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth v10 utilities signature auth bad request response has a 3xx status code
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth v10 utilities signature auth bad request response has a 4xx status code
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post auth v10 utilities signature auth bad request response has a 5xx status code
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth v10 utilities signature auth bad request response a status code equal to that given
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post auth v10 utilities signature auth bad request response
func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) Code() int {
	return 400
}

func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthBadRequest %s", 400, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthBadRequest %s", 400, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAuthV10UtilitiesSignatureAuthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthV10UtilitiesSignatureAuthUnauthorized creates a PostAuthV10UtilitiesSignatureAuthUnauthorized with default headers values
func NewPostAuthV10UtilitiesSignatureAuthUnauthorized() *PostAuthV10UtilitiesSignatureAuthUnauthorized {
	return &PostAuthV10UtilitiesSignatureAuthUnauthorized{}
}

/*
PostAuthV10UtilitiesSignatureAuthUnauthorized describes a response with status code 401, with default header values.

Private key not registered
*/
type PostAuthV10UtilitiesSignatureAuthUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this post auth v10 utilities signature auth unauthorized response has a 2xx status code
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth v10 utilities signature auth unauthorized response has a 3xx status code
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth v10 utilities signature auth unauthorized response has a 4xx status code
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post auth v10 utilities signature auth unauthorized response has a 5xx status code
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth v10 utilities signature auth unauthorized response a status code equal to that given
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post auth v10 utilities signature auth unauthorized response
func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) Code() int {
	return 401
}

func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthUnauthorized %s", 401, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthUnauthorized %s", 401, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAuthV10UtilitiesSignatureAuthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthV10UtilitiesSignatureAuthInternalServerError creates a PostAuthV10UtilitiesSignatureAuthInternalServerError with default headers values
func NewPostAuthV10UtilitiesSignatureAuthInternalServerError() *PostAuthV10UtilitiesSignatureAuthInternalServerError {
	return &PostAuthV10UtilitiesSignatureAuthInternalServerError{}
}

/*
PostAuthV10UtilitiesSignatureAuthInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostAuthV10UtilitiesSignatureAuthInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this post auth v10 utilities signature auth internal server error response has a 2xx status code
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth v10 utilities signature auth internal server error response has a 3xx status code
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth v10 utilities signature auth internal server error response has a 4xx status code
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post auth v10 utilities signature auth internal server error response has a 5xx status code
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post auth v10 utilities signature auth internal server error response a status code equal to that given
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post auth v10 utilities signature auth internal server error response
func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) Code() int {
	return 500
}

func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthInternalServerError %s", 500, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/utilities/signature-auth][%d] postAuthV10UtilitiesSignatureAuthInternalServerError %s", 500, payload)
}

func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *PostAuthV10UtilitiesSignatureAuthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
