// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/v2/models"
)

// AccessTokenReader is a Reader for the AccessToken structure.
type AccessTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccessTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccessTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccessTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccessTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /auth/v1.0/access-token/b2b] access-token", response, response.Code())
	}
}

// NewAccessTokenOK creates a AccessTokenOK with default headers values
func NewAccessTokenOK() *AccessTokenOK {
	return &AccessTokenOK{}
}

/*
AccessTokenOK describes a response with status code 200, with default header values.

OK
*/
type AccessTokenOK struct {
	Payload *models.AccessTokenResponse
}

// IsSuccess returns true when this access token o k response has a 2xx status code
func (o *AccessTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this access token o k response has a 3xx status code
func (o *AccessTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access token o k response has a 4xx status code
func (o *AccessTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this access token o k response has a 5xx status code
func (o *AccessTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this access token o k response a status code equal to that given
func (o *AccessTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the access token o k response
func (o *AccessTokenOK) Code() int {
	return 200
}

func (o *AccessTokenOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenOK %s", 200, payload)
}

func (o *AccessTokenOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenOK %s", 200, payload)
}

func (o *AccessTokenOK) GetPayload() *models.AccessTokenResponse {
	return o.Payload
}

func (o *AccessTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessTokenBadRequest creates a AccessTokenBadRequest with default headers values
func NewAccessTokenBadRequest() *AccessTokenBadRequest {
	return &AccessTokenBadRequest{}
}

/*
AccessTokenBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type AccessTokenBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this access token bad request response has a 2xx status code
func (o *AccessTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access token bad request response has a 3xx status code
func (o *AccessTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access token bad request response has a 4xx status code
func (o *AccessTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this access token bad request response has a 5xx status code
func (o *AccessTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this access token bad request response a status code equal to that given
func (o *AccessTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the access token bad request response
func (o *AccessTokenBadRequest) Code() int {
	return 400
}

func (o *AccessTokenBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenBadRequest %s", 400, payload)
}

func (o *AccessTokenBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenBadRequest %s", 400, payload)
}

func (o *AccessTokenBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessTokenUnauthorized creates a AccessTokenUnauthorized with default headers values
func NewAccessTokenUnauthorized() *AccessTokenUnauthorized {
	return &AccessTokenUnauthorized{}
}

/*
AccessTokenUnauthorized describes a response with status code 401, with default header values.

Authentication failed
*/
type AccessTokenUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this access token unauthorized response has a 2xx status code
func (o *AccessTokenUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access token unauthorized response has a 3xx status code
func (o *AccessTokenUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access token unauthorized response has a 4xx status code
func (o *AccessTokenUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this access token unauthorized response has a 5xx status code
func (o *AccessTokenUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this access token unauthorized response a status code equal to that given
func (o *AccessTokenUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the access token unauthorized response
func (o *AccessTokenUnauthorized) Code() int {
	return 401
}

func (o *AccessTokenUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenUnauthorized %s", 401, payload)
}

func (o *AccessTokenUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenUnauthorized %s", 401, payload)
}

func (o *AccessTokenUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessTokenInternalServerError creates a AccessTokenInternalServerError with default headers values
func NewAccessTokenInternalServerError() *AccessTokenInternalServerError {
	return &AccessTokenInternalServerError{}
}

/*
AccessTokenInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AccessTokenInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this access token internal server error response has a 2xx status code
func (o *AccessTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access token internal server error response has a 3xx status code
func (o *AccessTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access token internal server error response has a 4xx status code
func (o *AccessTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this access token internal server error response has a 5xx status code
func (o *AccessTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this access token internal server error response a status code equal to that given
func (o *AccessTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the access token internal server error response
func (o *AccessTokenInternalServerError) Code() int {
	return 500
}

func (o *AccessTokenInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenInternalServerError %s", 500, payload)
}

func (o *AccessTokenInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] accessTokenInternalServerError %s", 500, payload)
}

func (o *AccessTokenInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
