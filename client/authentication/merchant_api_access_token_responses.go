// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/models"
)

// MerchantAPIAccessTokenReader is a Reader for the MerchantAPIAccessToken structure.
type MerchantAPIAccessTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MerchantAPIAccessTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMerchantAPIAccessTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMerchantAPIAccessTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMerchantAPIAccessTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMerchantAPIAccessTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /auth/v1.0/access-token/b2b] merchant-api-access-token", response, response.Code())
	}
}

// NewMerchantAPIAccessTokenOK creates a MerchantAPIAccessTokenOK with default headers values
func NewMerchantAPIAccessTokenOK() *MerchantAPIAccessTokenOK {
	return &MerchantAPIAccessTokenOK{}
}

/*
MerchantAPIAccessTokenOK describes a response with status code 200, with default header values.

OK
*/
type MerchantAPIAccessTokenOK struct {
	Payload *models.Apiv1AccessTokenResponse
}

// IsSuccess returns true when this merchant Api access token o k response has a 2xx status code
func (o *MerchantAPIAccessTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this merchant Api access token o k response has a 3xx status code
func (o *MerchantAPIAccessTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this merchant Api access token o k response has a 4xx status code
func (o *MerchantAPIAccessTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this merchant Api access token o k response has a 5xx status code
func (o *MerchantAPIAccessTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this merchant Api access token o k response a status code equal to that given
func (o *MerchantAPIAccessTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the merchant Api access token o k response
func (o *MerchantAPIAccessTokenOK) Code() int {
	return 200
}

func (o *MerchantAPIAccessTokenOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenOK %s", 200, payload)
}

func (o *MerchantAPIAccessTokenOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenOK %s", 200, payload)
}

func (o *MerchantAPIAccessTokenOK) GetPayload() *models.Apiv1AccessTokenResponse {
	return o.Payload
}

func (o *MerchantAPIAccessTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Apiv1AccessTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMerchantAPIAccessTokenBadRequest creates a MerchantAPIAccessTokenBadRequest with default headers values
func NewMerchantAPIAccessTokenBadRequest() *MerchantAPIAccessTokenBadRequest {
	return &MerchantAPIAccessTokenBadRequest{}
}

/*
MerchantAPIAccessTokenBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type MerchantAPIAccessTokenBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this merchant Api access token bad request response has a 2xx status code
func (o *MerchantAPIAccessTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this merchant Api access token bad request response has a 3xx status code
func (o *MerchantAPIAccessTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this merchant Api access token bad request response has a 4xx status code
func (o *MerchantAPIAccessTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this merchant Api access token bad request response has a 5xx status code
func (o *MerchantAPIAccessTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this merchant Api access token bad request response a status code equal to that given
func (o *MerchantAPIAccessTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the merchant Api access token bad request response
func (o *MerchantAPIAccessTokenBadRequest) Code() int {
	return 400
}

func (o *MerchantAPIAccessTokenBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenBadRequest %s", 400, payload)
}

func (o *MerchantAPIAccessTokenBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenBadRequest %s", 400, payload)
}

func (o *MerchantAPIAccessTokenBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *MerchantAPIAccessTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMerchantAPIAccessTokenUnauthorized creates a MerchantAPIAccessTokenUnauthorized with default headers values
func NewMerchantAPIAccessTokenUnauthorized() *MerchantAPIAccessTokenUnauthorized {
	return &MerchantAPIAccessTokenUnauthorized{}
}

/*
MerchantAPIAccessTokenUnauthorized describes a response with status code 401, with default header values.

Authentication failed
*/
type MerchantAPIAccessTokenUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this merchant Api access token unauthorized response has a 2xx status code
func (o *MerchantAPIAccessTokenUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this merchant Api access token unauthorized response has a 3xx status code
func (o *MerchantAPIAccessTokenUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this merchant Api access token unauthorized response has a 4xx status code
func (o *MerchantAPIAccessTokenUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this merchant Api access token unauthorized response has a 5xx status code
func (o *MerchantAPIAccessTokenUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this merchant Api access token unauthorized response a status code equal to that given
func (o *MerchantAPIAccessTokenUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the merchant Api access token unauthorized response
func (o *MerchantAPIAccessTokenUnauthorized) Code() int {
	return 401
}

func (o *MerchantAPIAccessTokenUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenUnauthorized %s", 401, payload)
}

func (o *MerchantAPIAccessTokenUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenUnauthorized %s", 401, payload)
}

func (o *MerchantAPIAccessTokenUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *MerchantAPIAccessTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMerchantAPIAccessTokenInternalServerError creates a MerchantAPIAccessTokenInternalServerError with default headers values
func NewMerchantAPIAccessTokenInternalServerError() *MerchantAPIAccessTokenInternalServerError {
	return &MerchantAPIAccessTokenInternalServerError{}
}

/*
MerchantAPIAccessTokenInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type MerchantAPIAccessTokenInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this merchant Api access token internal server error response has a 2xx status code
func (o *MerchantAPIAccessTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this merchant Api access token internal server error response has a 3xx status code
func (o *MerchantAPIAccessTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this merchant Api access token internal server error response has a 4xx status code
func (o *MerchantAPIAccessTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this merchant Api access token internal server error response has a 5xx status code
func (o *MerchantAPIAccessTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this merchant Api access token internal server error response a status code equal to that given
func (o *MerchantAPIAccessTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the merchant Api access token internal server error response
func (o *MerchantAPIAccessTokenInternalServerError) Code() int {
	return 500
}

func (o *MerchantAPIAccessTokenInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenInternalServerError %s", 500, payload)
}

func (o *MerchantAPIAccessTokenInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/v1.0/access-token/b2b][%d] merchantApiAccessTokenInternalServerError %s", 500, payload)
}

func (o *MerchantAPIAccessTokenInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *MerchantAPIAccessTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
