// Code generated by go-swagger; DO NOT EDIT.

package virtual_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/models"
)

// PostV1VirtualAccountPaymentStatusReader is a Reader for the PostV1VirtualAccountPaymentStatus structure.
type PostV1VirtualAccountPaymentStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1VirtualAccountPaymentStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV1VirtualAccountPaymentStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1VirtualAccountPaymentStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1VirtualAccountPaymentStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1VirtualAccountPaymentStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/virtual-account/payment-status] PostV1VirtualAccountPaymentStatus", response, response.Code())
	}
}

// NewPostV1VirtualAccountPaymentStatusOK creates a PostV1VirtualAccountPaymentStatusOK with default headers values
func NewPostV1VirtualAccountPaymentStatusOK() *PostV1VirtualAccountPaymentStatusOK {
	return &PostV1VirtualAccountPaymentStatusOK{}
}

/*
PostV1VirtualAccountPaymentStatusOK describes a response with status code 200, with default header values.

OK
*/
type PostV1VirtualAccountPaymentStatusOK struct {
	Payload *models.Apiv1CheckVirtualAccountPaymentStatusResponse
}

// IsSuccess returns true when this post v1 virtual account payment status o k response has a 2xx status code
func (o *PostV1VirtualAccountPaymentStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 virtual account payment status o k response has a 3xx status code
func (o *PostV1VirtualAccountPaymentStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 virtual account payment status o k response has a 4xx status code
func (o *PostV1VirtualAccountPaymentStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 virtual account payment status o k response has a 5xx status code
func (o *PostV1VirtualAccountPaymentStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 virtual account payment status o k response a status code equal to that given
func (o *PostV1VirtualAccountPaymentStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v1 virtual account payment status o k response
func (o *PostV1VirtualAccountPaymentStatusOK) Code() int {
	return 200
}

func (o *PostV1VirtualAccountPaymentStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusOK %s", 200, payload)
}

func (o *PostV1VirtualAccountPaymentStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusOK %s", 200, payload)
}

func (o *PostV1VirtualAccountPaymentStatusOK) GetPayload() *models.Apiv1CheckVirtualAccountPaymentStatusResponse {
	return o.Payload
}

func (o *PostV1VirtualAccountPaymentStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Apiv1CheckVirtualAccountPaymentStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VirtualAccountPaymentStatusBadRequest creates a PostV1VirtualAccountPaymentStatusBadRequest with default headers values
func NewPostV1VirtualAccountPaymentStatusBadRequest() *PostV1VirtualAccountPaymentStatusBadRequest {
	return &PostV1VirtualAccountPaymentStatusBadRequest{}
}

/*
PostV1VirtualAccountPaymentStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1VirtualAccountPaymentStatusBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this post v1 virtual account payment status bad request response has a 2xx status code
func (o *PostV1VirtualAccountPaymentStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 virtual account payment status bad request response has a 3xx status code
func (o *PostV1VirtualAccountPaymentStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 virtual account payment status bad request response has a 4xx status code
func (o *PostV1VirtualAccountPaymentStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 virtual account payment status bad request response has a 5xx status code
func (o *PostV1VirtualAccountPaymentStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 virtual account payment status bad request response a status code equal to that given
func (o *PostV1VirtualAccountPaymentStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 virtual account payment status bad request response
func (o *PostV1VirtualAccountPaymentStatusBadRequest) Code() int {
	return 400
}

func (o *PostV1VirtualAccountPaymentStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusBadRequest %s", 400, payload)
}

func (o *PostV1VirtualAccountPaymentStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusBadRequest %s", 400, payload)
}

func (o *PostV1VirtualAccountPaymentStatusBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PostV1VirtualAccountPaymentStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VirtualAccountPaymentStatusUnauthorized creates a PostV1VirtualAccountPaymentStatusUnauthorized with default headers values
func NewPostV1VirtualAccountPaymentStatusUnauthorized() *PostV1VirtualAccountPaymentStatusUnauthorized {
	return &PostV1VirtualAccountPaymentStatusUnauthorized{}
}

/*
PostV1VirtualAccountPaymentStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1VirtualAccountPaymentStatusUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this post v1 virtual account payment status unauthorized response has a 2xx status code
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 virtual account payment status unauthorized response has a 3xx status code
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 virtual account payment status unauthorized response has a 4xx status code
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 virtual account payment status unauthorized response has a 5xx status code
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 virtual account payment status unauthorized response a status code equal to that given
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 virtual account payment status unauthorized response
func (o *PostV1VirtualAccountPaymentStatusUnauthorized) Code() int {
	return 401
}

func (o *PostV1VirtualAccountPaymentStatusUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusUnauthorized %s", 401, payload)
}

func (o *PostV1VirtualAccountPaymentStatusUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusUnauthorized %s", 401, payload)
}

func (o *PostV1VirtualAccountPaymentStatusUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PostV1VirtualAccountPaymentStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VirtualAccountPaymentStatusInternalServerError creates a PostV1VirtualAccountPaymentStatusInternalServerError with default headers values
func NewPostV1VirtualAccountPaymentStatusInternalServerError() *PostV1VirtualAccountPaymentStatusInternalServerError {
	return &PostV1VirtualAccountPaymentStatusInternalServerError{}
}

/*
PostV1VirtualAccountPaymentStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1VirtualAccountPaymentStatusInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this post v1 virtual account payment status internal server error response has a 2xx status code
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 virtual account payment status internal server error response has a 3xx status code
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 virtual account payment status internal server error response has a 4xx status code
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 virtual account payment status internal server error response has a 5xx status code
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 virtual account payment status internal server error response a status code equal to that given
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 virtual account payment status internal server error response
func (o *PostV1VirtualAccountPaymentStatusInternalServerError) Code() int {
	return 500
}

func (o *PostV1VirtualAccountPaymentStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusInternalServerError %s", 500, payload)
}

func (o *PostV1VirtualAccountPaymentStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/virtual-account/payment-status][%d] postV1VirtualAccountPaymentStatusInternalServerError %s", 500, payload)
}

func (o *PostV1VirtualAccountPaymentStatusInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *PostV1VirtualAccountPaymentStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
