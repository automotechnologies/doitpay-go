// Code generated by go-swagger; DO NOT EDIT.

package virtual_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/models"
)

// PostVaV10TransferVaStatusReader is a Reader for the PostVaV10TransferVaStatus structure.
type PostVaV10TransferVaStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVaV10TransferVaStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostVaV10TransferVaStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostVaV10TransferVaStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostVaV10TransferVaStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostVaV10TransferVaStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /va/v1.0/transfer-va/status] PostVaV10TransferVaStatus", response, response.Code())
	}
}

// NewPostVaV10TransferVaStatusOK creates a PostVaV10TransferVaStatusOK with default headers values
func NewPostVaV10TransferVaStatusOK() *PostVaV10TransferVaStatusOK {
	return &PostVaV10TransferVaStatusOK{}
}

/*
PostVaV10TransferVaStatusOK describes a response with status code 200, with default header values.

OK
*/
type PostVaV10TransferVaStatusOK struct {
	Payload *models.CheckVirtualAccountPaymentStatusResponse
}

// IsSuccess returns true when this post va v10 transfer va status o k response has a 2xx status code
func (o *PostVaV10TransferVaStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post va v10 transfer va status o k response has a 3xx status code
func (o *PostVaV10TransferVaStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post va v10 transfer va status o k response has a 4xx status code
func (o *PostVaV10TransferVaStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post va v10 transfer va status o k response has a 5xx status code
func (o *PostVaV10TransferVaStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post va v10 transfer va status o k response a status code equal to that given
func (o *PostVaV10TransferVaStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post va v10 transfer va status o k response
func (o *PostVaV10TransferVaStatusOK) Code() int {
	return 200
}

func (o *PostVaV10TransferVaStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusOK %s", 200, payload)
}

func (o *PostVaV10TransferVaStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusOK %s", 200, payload)
}

func (o *PostVaV10TransferVaStatusOK) GetPayload() *models.CheckVirtualAccountPaymentStatusResponse {
	return o.Payload
}

func (o *PostVaV10TransferVaStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CheckVirtualAccountPaymentStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVaV10TransferVaStatusBadRequest creates a PostVaV10TransferVaStatusBadRequest with default headers values
func NewPostVaV10TransferVaStatusBadRequest() *PostVaV10TransferVaStatusBadRequest {
	return &PostVaV10TransferVaStatusBadRequest{}
}

/*
PostVaV10TransferVaStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostVaV10TransferVaStatusBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this post va v10 transfer va status bad request response has a 2xx status code
func (o *PostVaV10TransferVaStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post va v10 transfer va status bad request response has a 3xx status code
func (o *PostVaV10TransferVaStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post va v10 transfer va status bad request response has a 4xx status code
func (o *PostVaV10TransferVaStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post va v10 transfer va status bad request response has a 5xx status code
func (o *PostVaV10TransferVaStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post va v10 transfer va status bad request response a status code equal to that given
func (o *PostVaV10TransferVaStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post va v10 transfer va status bad request response
func (o *PostVaV10TransferVaStatusBadRequest) Code() int {
	return 400
}

func (o *PostVaV10TransferVaStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusBadRequest %s", 400, payload)
}

func (o *PostVaV10TransferVaStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusBadRequest %s", 400, payload)
}

func (o *PostVaV10TransferVaStatusBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PostVaV10TransferVaStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVaV10TransferVaStatusUnauthorized creates a PostVaV10TransferVaStatusUnauthorized with default headers values
func NewPostVaV10TransferVaStatusUnauthorized() *PostVaV10TransferVaStatusUnauthorized {
	return &PostVaV10TransferVaStatusUnauthorized{}
}

/*
PostVaV10TransferVaStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostVaV10TransferVaStatusUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this post va v10 transfer va status unauthorized response has a 2xx status code
func (o *PostVaV10TransferVaStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post va v10 transfer va status unauthorized response has a 3xx status code
func (o *PostVaV10TransferVaStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post va v10 transfer va status unauthorized response has a 4xx status code
func (o *PostVaV10TransferVaStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post va v10 transfer va status unauthorized response has a 5xx status code
func (o *PostVaV10TransferVaStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post va v10 transfer va status unauthorized response a status code equal to that given
func (o *PostVaV10TransferVaStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post va v10 transfer va status unauthorized response
func (o *PostVaV10TransferVaStatusUnauthorized) Code() int {
	return 401
}

func (o *PostVaV10TransferVaStatusUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusUnauthorized %s", 401, payload)
}

func (o *PostVaV10TransferVaStatusUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusUnauthorized %s", 401, payload)
}

func (o *PostVaV10TransferVaStatusUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PostVaV10TransferVaStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVaV10TransferVaStatusInternalServerError creates a PostVaV10TransferVaStatusInternalServerError with default headers values
func NewPostVaV10TransferVaStatusInternalServerError() *PostVaV10TransferVaStatusInternalServerError {
	return &PostVaV10TransferVaStatusInternalServerError{}
}

/*
PostVaV10TransferVaStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostVaV10TransferVaStatusInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this post va v10 transfer va status internal server error response has a 2xx status code
func (o *PostVaV10TransferVaStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post va v10 transfer va status internal server error response has a 3xx status code
func (o *PostVaV10TransferVaStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post va v10 transfer va status internal server error response has a 4xx status code
func (o *PostVaV10TransferVaStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post va v10 transfer va status internal server error response has a 5xx status code
func (o *PostVaV10TransferVaStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post va v10 transfer va status internal server error response a status code equal to that given
func (o *PostVaV10TransferVaStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post va v10 transfer va status internal server error response
func (o *PostVaV10TransferVaStatusInternalServerError) Code() int {
	return 500
}

func (o *PostVaV10TransferVaStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusInternalServerError %s", 500, payload)
}

func (o *PostVaV10TransferVaStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /va/v1.0/transfer-va/status][%d] postVaV10TransferVaStatusInternalServerError %s", 500, payload)
}

func (o *PostVaV10TransferVaStatusInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *PostVaV10TransferVaStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
