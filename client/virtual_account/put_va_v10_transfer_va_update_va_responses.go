// Code generated by go-swagger; DO NOT EDIT.

package virtual_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/models"
)

// PutVaV10TransferVaUpdateVaReader is a Reader for the PutVaV10TransferVaUpdateVa structure.
type PutVaV10TransferVaUpdateVaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutVaV10TransferVaUpdateVaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutVaV10TransferVaUpdateVaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutVaV10TransferVaUpdateVaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutVaV10TransferVaUpdateVaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutVaV10TransferVaUpdateVaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /va/v1.0/transfer-va/update-va] PutVaV10TransferVaUpdateVa", response, response.Code())
	}
}

// NewPutVaV10TransferVaUpdateVaOK creates a PutVaV10TransferVaUpdateVaOK with default headers values
func NewPutVaV10TransferVaUpdateVaOK() *PutVaV10TransferVaUpdateVaOK {
	return &PutVaV10TransferVaUpdateVaOK{}
}

/*
PutVaV10TransferVaUpdateVaOK describes a response with status code 200, with default header values.

OK
*/
type PutVaV10TransferVaUpdateVaOK struct {
	Payload *models.UpdateVirtualAccountResponse
}

// IsSuccess returns true when this put va v10 transfer va update va o k response has a 2xx status code
func (o *PutVaV10TransferVaUpdateVaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put va v10 transfer va update va o k response has a 3xx status code
func (o *PutVaV10TransferVaUpdateVaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put va v10 transfer va update va o k response has a 4xx status code
func (o *PutVaV10TransferVaUpdateVaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put va v10 transfer va update va o k response has a 5xx status code
func (o *PutVaV10TransferVaUpdateVaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put va v10 transfer va update va o k response a status code equal to that given
func (o *PutVaV10TransferVaUpdateVaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put va v10 transfer va update va o k response
func (o *PutVaV10TransferVaUpdateVaOK) Code() int {
	return 200
}

func (o *PutVaV10TransferVaUpdateVaOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaOK %s", 200, payload)
}

func (o *PutVaV10TransferVaUpdateVaOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaOK %s", 200, payload)
}

func (o *PutVaV10TransferVaUpdateVaOK) GetPayload() *models.UpdateVirtualAccountResponse {
	return o.Payload
}

func (o *PutVaV10TransferVaUpdateVaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateVirtualAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVaV10TransferVaUpdateVaBadRequest creates a PutVaV10TransferVaUpdateVaBadRequest with default headers values
func NewPutVaV10TransferVaUpdateVaBadRequest() *PutVaV10TransferVaUpdateVaBadRequest {
	return &PutVaV10TransferVaUpdateVaBadRequest{}
}

/*
PutVaV10TransferVaUpdateVaBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutVaV10TransferVaUpdateVaBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this put va v10 transfer va update va bad request response has a 2xx status code
func (o *PutVaV10TransferVaUpdateVaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put va v10 transfer va update va bad request response has a 3xx status code
func (o *PutVaV10TransferVaUpdateVaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put va v10 transfer va update va bad request response has a 4xx status code
func (o *PutVaV10TransferVaUpdateVaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put va v10 transfer va update va bad request response has a 5xx status code
func (o *PutVaV10TransferVaUpdateVaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put va v10 transfer va update va bad request response a status code equal to that given
func (o *PutVaV10TransferVaUpdateVaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put va v10 transfer va update va bad request response
func (o *PutVaV10TransferVaUpdateVaBadRequest) Code() int {
	return 400
}

func (o *PutVaV10TransferVaUpdateVaBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaBadRequest %s", 400, payload)
}

func (o *PutVaV10TransferVaUpdateVaBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaBadRequest %s", 400, payload)
}

func (o *PutVaV10TransferVaUpdateVaBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PutVaV10TransferVaUpdateVaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVaV10TransferVaUpdateVaUnauthorized creates a PutVaV10TransferVaUpdateVaUnauthorized with default headers values
func NewPutVaV10TransferVaUpdateVaUnauthorized() *PutVaV10TransferVaUpdateVaUnauthorized {
	return &PutVaV10TransferVaUpdateVaUnauthorized{}
}

/*
PutVaV10TransferVaUpdateVaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutVaV10TransferVaUpdateVaUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this put va v10 transfer va update va unauthorized response has a 2xx status code
func (o *PutVaV10TransferVaUpdateVaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put va v10 transfer va update va unauthorized response has a 3xx status code
func (o *PutVaV10TransferVaUpdateVaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put va v10 transfer va update va unauthorized response has a 4xx status code
func (o *PutVaV10TransferVaUpdateVaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put va v10 transfer va update va unauthorized response has a 5xx status code
func (o *PutVaV10TransferVaUpdateVaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put va v10 transfer va update va unauthorized response a status code equal to that given
func (o *PutVaV10TransferVaUpdateVaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put va v10 transfer va update va unauthorized response
func (o *PutVaV10TransferVaUpdateVaUnauthorized) Code() int {
	return 401
}

func (o *PutVaV10TransferVaUpdateVaUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaUnauthorized %s", 401, payload)
}

func (o *PutVaV10TransferVaUpdateVaUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaUnauthorized %s", 401, payload)
}

func (o *PutVaV10TransferVaUpdateVaUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PutVaV10TransferVaUpdateVaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutVaV10TransferVaUpdateVaInternalServerError creates a PutVaV10TransferVaUpdateVaInternalServerError with default headers values
func NewPutVaV10TransferVaUpdateVaInternalServerError() *PutVaV10TransferVaUpdateVaInternalServerError {
	return &PutVaV10TransferVaUpdateVaInternalServerError{}
}

/*
PutVaV10TransferVaUpdateVaInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutVaV10TransferVaUpdateVaInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this put va v10 transfer va update va internal server error response has a 2xx status code
func (o *PutVaV10TransferVaUpdateVaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put va v10 transfer va update va internal server error response has a 3xx status code
func (o *PutVaV10TransferVaUpdateVaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put va v10 transfer va update va internal server error response has a 4xx status code
func (o *PutVaV10TransferVaUpdateVaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put va v10 transfer va update va internal server error response has a 5xx status code
func (o *PutVaV10TransferVaUpdateVaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put va v10 transfer va update va internal server error response a status code equal to that given
func (o *PutVaV10TransferVaUpdateVaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put va v10 transfer va update va internal server error response
func (o *PutVaV10TransferVaUpdateVaInternalServerError) Code() int {
	return 500
}

func (o *PutVaV10TransferVaUpdateVaInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaInternalServerError %s", 500, payload)
}

func (o *PutVaV10TransferVaUpdateVaInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /va/v1.0/transfer-va/update-va][%d] putVaV10TransferVaUpdateVaInternalServerError %s", 500, payload)
}

func (o *PutVaV10TransferVaUpdateVaInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *PutVaV10TransferVaUpdateVaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
