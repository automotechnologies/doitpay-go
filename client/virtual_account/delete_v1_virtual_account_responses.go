// Code generated by go-swagger; DO NOT EDIT.

package virtual_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/automotechnologies/doitpay-go/models"
)

// DeleteV1VirtualAccountReader is a Reader for the DeleteV1VirtualAccount structure.
type DeleteV1VirtualAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteV1VirtualAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteV1VirtualAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteV1VirtualAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteV1VirtualAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteV1VirtualAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/virtual-account] DeleteV1VirtualAccount", response, response.Code())
	}
}

// NewDeleteV1VirtualAccountOK creates a DeleteV1VirtualAccountOK with default headers values
func NewDeleteV1VirtualAccountOK() *DeleteV1VirtualAccountOK {
	return &DeleteV1VirtualAccountOK{}
}

/*
DeleteV1VirtualAccountOK describes a response with status code 200, with default header values.

OK
*/
type DeleteV1VirtualAccountOK struct {
	Payload *models.DeleteVirtualAccountResponse
}

// IsSuccess returns true when this delete v1 virtual account o k response has a 2xx status code
func (o *DeleteV1VirtualAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete v1 virtual account o k response has a 3xx status code
func (o *DeleteV1VirtualAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 virtual account o k response has a 4xx status code
func (o *DeleteV1VirtualAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete v1 virtual account o k response has a 5xx status code
func (o *DeleteV1VirtualAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 virtual account o k response a status code equal to that given
func (o *DeleteV1VirtualAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete v1 virtual account o k response
func (o *DeleteV1VirtualAccountOK) Code() int {
	return 200
}

func (o *DeleteV1VirtualAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountOK %s", 200, payload)
}

func (o *DeleteV1VirtualAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountOK %s", 200, payload)
}

func (o *DeleteV1VirtualAccountOK) GetPayload() *models.DeleteVirtualAccountResponse {
	return o.Payload
}

func (o *DeleteV1VirtualAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteVirtualAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1VirtualAccountBadRequest creates a DeleteV1VirtualAccountBadRequest with default headers values
func NewDeleteV1VirtualAccountBadRequest() *DeleteV1VirtualAccountBadRequest {
	return &DeleteV1VirtualAccountBadRequest{}
}

/*
DeleteV1VirtualAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteV1VirtualAccountBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this delete v1 virtual account bad request response has a 2xx status code
func (o *DeleteV1VirtualAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 virtual account bad request response has a 3xx status code
func (o *DeleteV1VirtualAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 virtual account bad request response has a 4xx status code
func (o *DeleteV1VirtualAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 virtual account bad request response has a 5xx status code
func (o *DeleteV1VirtualAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 virtual account bad request response a status code equal to that given
func (o *DeleteV1VirtualAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete v1 virtual account bad request response
func (o *DeleteV1VirtualAccountBadRequest) Code() int {
	return 400
}

func (o *DeleteV1VirtualAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountBadRequest %s", 400, payload)
}

func (o *DeleteV1VirtualAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountBadRequest %s", 400, payload)
}

func (o *DeleteV1VirtualAccountBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteV1VirtualAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1VirtualAccountUnauthorized creates a DeleteV1VirtualAccountUnauthorized with default headers values
func NewDeleteV1VirtualAccountUnauthorized() *DeleteV1VirtualAccountUnauthorized {
	return &DeleteV1VirtualAccountUnauthorized{}
}

/*
DeleteV1VirtualAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteV1VirtualAccountUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this delete v1 virtual account unauthorized response has a 2xx status code
func (o *DeleteV1VirtualAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 virtual account unauthorized response has a 3xx status code
func (o *DeleteV1VirtualAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 virtual account unauthorized response has a 4xx status code
func (o *DeleteV1VirtualAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 virtual account unauthorized response has a 5xx status code
func (o *DeleteV1VirtualAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 virtual account unauthorized response a status code equal to that given
func (o *DeleteV1VirtualAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete v1 virtual account unauthorized response
func (o *DeleteV1VirtualAccountUnauthorized) Code() int {
	return 401
}

func (o *DeleteV1VirtualAccountUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountUnauthorized %s", 401, payload)
}

func (o *DeleteV1VirtualAccountUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountUnauthorized %s", 401, payload)
}

func (o *DeleteV1VirtualAccountUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteV1VirtualAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1VirtualAccountInternalServerError creates a DeleteV1VirtualAccountInternalServerError with default headers values
func NewDeleteV1VirtualAccountInternalServerError() *DeleteV1VirtualAccountInternalServerError {
	return &DeleteV1VirtualAccountInternalServerError{}
}

/*
DeleteV1VirtualAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteV1VirtualAccountInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this delete v1 virtual account internal server error response has a 2xx status code
func (o *DeleteV1VirtualAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 virtual account internal server error response has a 3xx status code
func (o *DeleteV1VirtualAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 virtual account internal server error response has a 4xx status code
func (o *DeleteV1VirtualAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete v1 virtual account internal server error response has a 5xx status code
func (o *DeleteV1VirtualAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete v1 virtual account internal server error response a status code equal to that given
func (o *DeleteV1VirtualAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete v1 virtual account internal server error response
func (o *DeleteV1VirtualAccountInternalServerError) Code() int {
	return 500
}

func (o *DeleteV1VirtualAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountInternalServerError %s", 500, payload)
}

func (o *DeleteV1VirtualAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/virtual-account][%d] deleteV1VirtualAccountInternalServerError %s", 500, payload)
}

func (o *DeleteV1VirtualAccountInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteV1VirtualAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
