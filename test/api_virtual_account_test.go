/*
Doitpay API

Testing PublicVirtualAccountAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package doitpay

import (
	"context"
	"os"
	"testing"

	"github.com/automotechnologies/doitpay-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_doitpay_VirtualAccountApiService(t *testing.T) {

	apiKey := os.Getenv("DTP_APIKEY")
	if apiKey == "" {
		t.Skip("DTP_APIKEY not set")
	}

	apiClient := doitpay.NewClient(apiKey)

	t.Run("Test VirtualAccountApiService CreateVirtualAccount", func(t *testing.T) {

		resp, httpRes, err := apiClient.VirtualAccountAPI.CreateVirtualAccount(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualAccountApiService GetVirtualAccountById", func(t *testing.T) {

		var virtualAccountId int32

		resp, httpRes, err := apiClient.VirtualAccountAPI.GetVirtualAccountById(context.Background(), virtualAccountId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualAccountApiService GetVirtualAccountByNumber", func(t *testing.T) {

		var virtualAccountNumber string

		resp, httpRes, err := apiClient.VirtualAccountAPI.GetVirtualAccountByNumber(context.Background(), virtualAccountNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualAccountApiService GetVirtualAccounts", func(t *testing.T) {

		resp, httpRes, err := apiClient.VirtualAccountAPI.GetVirtualAccounts(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
