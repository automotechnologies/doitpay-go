// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Apiv1QrisQueryPaymentRequest apiv1 qris query payment request
//
// swagger:model apiv1.QrisQueryPaymentRequest
type Apiv1QrisQueryPaymentRequest struct {

	// external store ID
	ExternalStoreID string `json:"externalStoreID,omitempty"`

	// merchant Id
	MerchantID string `json:"merchantId,omitempty"`

	// original external Id
	OriginalExternalID string `json:"originalExternalId,omitempty"`

	// original partner reference no
	// Required: true
	OriginalPartnerReferenceNo *string `json:"originalPartnerReferenceNo"`

	// original reference no
	// Required: true
	OriginalReferenceNo *string `json:"originalReferenceNo"`

	// service code
	// Required: true
	ServiceCode *string `json:"serviceCode"`

	// sub merchant Id
	SubMerchantID string `json:"subMerchantId,omitempty"`
}

// Validate validates this apiv1 qris query payment request
func (m *Apiv1QrisQueryPaymentRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOriginalPartnerReferenceNo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalReferenceNo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Apiv1QrisQueryPaymentRequest) validateOriginalPartnerReferenceNo(formats strfmt.Registry) error {

	if err := validate.Required("originalPartnerReferenceNo", "body", m.OriginalPartnerReferenceNo); err != nil {
		return err
	}

	return nil
}

func (m *Apiv1QrisQueryPaymentRequest) validateOriginalReferenceNo(formats strfmt.Registry) error {

	if err := validate.Required("originalReferenceNo", "body", m.OriginalReferenceNo); err != nil {
		return err
	}

	return nil
}

func (m *Apiv1QrisQueryPaymentRequest) validateServiceCode(formats strfmt.Registry) error {

	if err := validate.Required("serviceCode", "body", m.ServiceCode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this apiv1 qris query payment request based on context it is used
func (m *Apiv1QrisQueryPaymentRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Apiv1QrisQueryPaymentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Apiv1QrisQueryPaymentRequest) UnmarshalBinary(b []byte) error {
	var res Apiv1QrisQueryPaymentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
